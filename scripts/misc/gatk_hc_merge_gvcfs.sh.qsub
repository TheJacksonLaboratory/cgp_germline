#!/bin/bash
#PBS -N gvcf_merge_genotype                                # name of the job
#PBS -d /fastscratch/amins/germline/gatk4_hc/combined_gvcfs                                    # the workding dir for each job, this is <flow_run_path>/uniqueid/tmp
#PBS -o /fastscratch/amins/germline/gatk4_hc/combined_gvcfs/log_gvcf_merge_genotype.out                                 # output is sent to logfile, stdout + stderr by default
#PBS -e /fastscratch/amins/germline/gatk4_hc/combined_gvcfs/log_gvcf_merge_genotype.err                                 # output is sent to logfile, stdout + stderr by default
#PBS -q batch                                  # Job queue
#PBS -l walltime=72:00:00                      # Walltime in minutes
#PBS -l mem=32gb                             # Memory requirements in Kbytes
#PBS -l nodes=1:ppn=4                 # CPU reserved
#PBS -M amins@jax.org                           # for notifications
#PBS -m a                              # send email when job ends 
#PBS -r y                                         # make the jobs re-runnable
#PBS -S /bin/bash                                 # use bash shell
#PBS -V                                           # pass user env
#PBS -j oe
#PBS                                 # Any extra arguments passed onto queue

## --- DO NOT EDIT from below here---- ##
## following will always overwrite previous output file, if any.
set +o noclobber

## sleep for n seconds before running any command
FORCEWAIT=$(shuf -i 10-30 -n 1)
printf "\nWaiting for %s seconds before starting workflow\n" "${FORCEWAIT:-10}"
sleep "${FORCEWAIT}"

## pass envrionment variables and bash confligs on-the-fly while job is running
## source default flowrvars.sh unless user has exe file with same name under ~/bin/
if [[ -s "${HOME}"/bin/flowrvars.sh && -x "${HOME}"/bin/flowrvars.sh ]]; then
    # source by prefix . else env variable may not get exported to parent script
    . "${HOME}"/bin/flowrvars.sh
elif [[ -s "${RVSETENV}"/bin/flowrvars.sh && -x "${RVSETENV}"/bin/flowrvars.sh ]]; then
    # source by prefix . else env variable may not get exported to parent script
    . "${RVSETENV}"/bin/flowrvars.sh
fi

printf "####\nPINGSTARTSLACK exported as %s\nPINGENDSLACK exported as %s\n####" "${PINGSTARTSLACK:-NO}" "${PINGENDSLACK:-NO}"

echo "BEGIN at $(date)"

## notify slack when job starts if env variable PINGSTARTSLACK is set to YES

if [[ "${PINGSTARTSLACK}" == "YES" && -x "${HOME}"/bin/pingme ]]; then
    # keep ssh into background but allow 5 seconds before exit of parent script so ssh job can ping slack
    STARTMSG="MYJOB ID: gvcf_merge_genotype starting at ${CWD} on $(hostname) for ${USER}"
    ssh helix "${HOME}/bin/pingme -u ${USER} -i warning -m "\"${STARTMSG}\""" >> /dev/null 2>&1 &
    sleep 5
    echo -e "\n${STARTMSG}\n"
elif [[ "${PINGSTARTSLACK}" == "YES" && -x "${RVSETENV}"/bin/pingme ]]; then
    # keep ssh into background but allow 5 seconds before exit of parent script so ssh job can ping slack
    STARTMSG="MYJOB ID: gvcf_merge_genotype starting at ${CWD} on $(hostname) for ${USER}"
    ssh helix "${RVSETENV}/bin/pingme -u ${USER} -i warning -m "\"${STARTMSG}\""" >> /dev/null 2>&1 &
    sleep 5
    echo -e "\n${STARTMSG}\n"
fi

## File containing commands will be copied here verbatim ##

###################### START USER SUPPLIED COMMANDS ######################

#!/bin/bash

## merge GVCFS generated using GATK4 HaplotypeCaller
## @sbamin

## Using gatk 4.0.9.0
module load rvgatk4/4.0.9.0

## location of gvcfs
BASEDIR="/projects/verhaak-lab/amins_cgp_level2/germline_calls/germline_flow_20180720/gatk4_hc"
REF_FASTA="/projects/verhaak-lab/DogWGSReference/CanFam3_1.fa"
CHRS="/projects/verhaak-lab/DogWGSReference/Chrom_List/gatk/gatk_int_chrs39.list"

TMPDIR="/fastscratch/amins/tmp"
mkdir -p "$TMPDIR" && export TMPDIR

OUTDIR="/fastscratch/amins/germline/gatk4_hc/combined_gvcfs"
mkdir -p "$OUTDIR" && cd "$OUTDIR"

################################ Combine GVCFs #################################

# TSTAMP=$(date +%d%b%y_%H%M%S%Z)
# printf "\nLOGGER\t%s\tSTART\tCombineGVCFs\t0\n" "$TSTAMP"

# gatk CombineGVCFs \
# 	-R "$REF_FASTA" \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-4990-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-99AF-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-A71E-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-AB3E-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-B2DC-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-D7EC-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-DCD0-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-FCD0-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S01-FECA-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S02-2C25-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S02-4BAC-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S02-81E2-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S02-8A0A-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S02-A974-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-03A6-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-05CA-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-1165-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-1793-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-2C4F-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-3688-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-49E6-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-6254-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-63FE-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-6638-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-66A9-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-6D5C-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-6E45-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-750B-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-8228-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-B3CE-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-B70F-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-C04D-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-E2CD-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-E7AB-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-E952-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-ED99-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-F840-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S03-FC65-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-0FF0-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-1166-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-157E-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-22C7-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-2EC9-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-3F8C-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-42D9-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-5CE5-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-607E-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-6561-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-92AC-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-B023-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-B02B-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-BF76-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-C3C0-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-D026-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-D756-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S04-E271-T6-A1-B12_PR_snp_calls.vcf.gz \
# 	--variant "$BASEDIR"/hc_germline_as_gvcf_S05-B813-T6-A2-B12_PR_snp_calls.vcf.gz \
# 	--tmp-dir "$TMPDIR" \
# 	-L "$CHRS" \
# 	-O "$OUTDIR"/gatk4_hc_combined_gvcfs_n57_merged_paired_bams.g.vcf.gz && \
# TSTAMP=$(date +%d%b%y_%H%M%S%Z) && \
# printf "\nLOGGER\t%s\tEND\tCombineGVCFs\t%s\n" "$TSTAMP" "$?"

########################### Genotype Combined GVCFs ############################

TSTAMP=$(date +%d%b%y_%H%M%S%Z) && \
printf "\nLOGGER\t%s\tSTART\tGenotypeCombinedGVCF\t0\n" "$TSTAMP"

CHRS="1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,25"
echo -e "\nGenotype partially merged GVCfs for chromosomes: $CHRS\nRemaining 21 chromosomes are individually merged and genotyped using array job, and will be merged with resulting genotyped vcf from this run, namely $OUTDIR/gatk4_hc_combined_gvcfs_n57_merged_paired_bams.genotyped_18chrs.vcf.gz\n\n"

gatk IndexFeatureFile \
	-F "$OUTDIR"/gatk4_hc_combined_gvcfs_n57_merged_paired_bams.g.vcf.gz

gatk --java-options "-Xmx16g" GenotypeGVCFs \
   -R "$REF_FASTA" \
   -V "$OUTDIR"/gatk4_hc_combined_gvcfs_n57_merged_paired_bams.g.vcf.gz \
   --tmp-dir "$TMPDIR" \
   -L "$CHRS" \
   -O "$OUTDIR"/gatk4_hc_combined_gvcfs_n57_merged_paired_bams.genotyped_18chrs.vcf.gz && \
TSTAMP=$(date +%d%b%y_%H%M%S%Z) && \
printf "\nLOGGER\t%s\tEND\tGenotypeCombinedGVCF\t%s\n" "$TSTAMP" "$?"

###################### END USER SUPPLIED COMMANDS ######################

exitstat=$?

echo "END at $(date)"

# notify slack if error
if [[ "${FORCESTOPSLACK}" == "YES" ]]; then
    WARNMSG="MYJOB ID: gvcf_merge_genotype exited at ${CWD} on $(hostname) for ${USER} with exit status: ${exitstat}"
    echo -e "\n${WARNMSG}\n"
elif [[ "${exitstat}" != 0 && -x "${RVSETENV}"/bin/pingme ]] || [[ "${exitstat}" != 0 && "${PINGENDSLACK}" == "YES" && -x "${RVSETENV}"/bin/pingme ]]; then
    ERRMSG="MYJOB ID: gvcf_merge_genotype failed at ${CWD} on $(hostname) for ${USER} with exit status: ${exitstat}"

    # keep ssh into background but allow 5 seconds before exit of parent script so ssh job can ping slack
    if [[ -s "${HOME}"/bin/pingme && -x "${HOME}"/bin/pingme ]]; then
        ssh helix "${HOME}/bin/pingme -u ${USER} -i warning -m "\"${ERRMSG}\""" >> /dev/null 2>&1 &
        sleep 5
    else
        ssh helix "${RVSETENV}/bin/pingme -u ${USER} -i warning -m "\"${ERRMSG}\""" >> /dev/null 2>&1 &
        sleep 5
    fi

    echo -e "\n${ERRMSG}\n"

elif [[ "${exitstat}" == 0 && "${PINGENDSLACK}" == "YES" && -s "${RVSETENV}"/bin/pingme ]]; then
    PASSMSG="MYJOB ID: gvcf_merge_genotype is complete at ${CWD} on $(hostname) for ${USER} with exit status: ${exitstat}"

    # keep ssh into background but allow 5 seconds before exit of parent script so ssh job can ping slack
    if [[ -s "${HOME}"/bin/pingme && -x "${HOME}"/bin/pingme ]]; then
        ssh helix "${HOME}/bin/pingme -u ${USER} -i white_check_mark -m "\"${PASSMSG}\""" >> /dev/null 2>&1 &
        sleep 5
    else
        ssh helix "${RVSETENV}/bin/pingme -u ${USER} -i white_check_mark -m "\"${PASSMSG}\""" >> /dev/null 2>&1 &
        sleep 5
    fi

    echo -e "\n${PASSMSG}\n"
fi

echo "exit status was ${exitstat}"
exit ${exitstat}

## END ##

