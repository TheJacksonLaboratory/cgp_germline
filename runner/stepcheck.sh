#!/bin/bash

## Checks in/out files, including size and force override before cleaning up tmp files
## author: Samir B. Amin, @sbamin
## v2.0

# usage
show_help() {
cat << EOF

This script will be executed after completion of each analysis step and will check if output produced at each analysis step is valid file with non-zero size or not. If not valid, exit code will be reported in log file as #### EXIT_CODE 1 ####

Usage: ${0##*/} -f <path to output file> >> stepcheck_<step number>_<output file name>.log

    	-h  display this help and exit
        -i  input file path (optional)
        -j input file path for second input, e.g., paired fastq (optional)
        -k input file path for third input, e.g., paired fastq (optional)
        -f Required: output file path
        -p Optional: output file path to second output
        -d  To delete temp files generated by preprocess steps: logical (DELETE|KEEP; default is KEEP)

Example: ${0##*/} -f "sample_1_tm_sorted.bam" >> stepcheck_1_sample_1_tm_sorted.log

EOF
}

if [[ $# == 0 ]];then show_help;exit 1;fi

while getopts "i:f:p:j:k:d:h" opt; do
    case "$opt" in
        h) show_help;exit 0;;
        f) OUTPATH=$OPTARG;;
        p) OUT2PATH=$OPTARG;;
        i) INPATH=$OPTARG;;
        j) INPATH2=$OPTARG;;
        k) INPATH3=$OPTARG;;
        d) DELFILE=$OPTARG;;
       '?') show_help >&2 exit 1 ;;
    esac
done

TSTAMP="$(date +%d%b%y_%H%M%S%Z)"

## if inpath is not given, default to dummy one: will be removed at the end
INPATH=${INPATH:-"tmp_inpath"}
touch "${INPATH}"

## optional second output path
OUT2PATH=${OUT2PATH:-"NONE"}

## change DELFILE on-the-fly using ~/bin/flowrvars_loop.sh
## pass envrionment variables and bash confligs on-the-fly while job is running
if [[ -s "${HOME}"/bin/flowrvars_loop.sh && -x "${HOME}"/bin/flowrvars_loop.sh ]]; then
# source by prefix . else env variable may not get exported to parent script
  . "${HOME}"/bin/flowrvars_loop.sh
fi

DELFILE=${DELFILE:-"KEEP"}
## Override DELFILE, keep all bams for beta test on nextflow
DELFILE="KEEP"
## If output file is more than minimum file size, input file will be deleted if -d DELETE was supplied. http://stackoverflow.com/a/5920355/1243763
## 10 MB size
MINSIZE=${MINSIZE:-10000000}

## calculate output file size
OUTSIZE="$(wc -c < "${OUTPATH}")"
## OUT2SIZE defaults to OUTSIZE if OUT2PATH is NONE
if [[ "${OUT2PATH}" != "NONE" ]]; then
    OUT2SIZE="$(wc -c < "${OUT2PATH}")"
else
    OUT2SIZE="${OUTSIZE}"
fi


if [[ ! -s "${OUTPATH}" ]] || [[ "${OUT2PATH}" != "NONE" && ! -s "${OUT2PATH}" ]];then
    echo -e "\n####### ERROR #######\n${TSTAMP}: Output file ${OUTPATH} and/or ${OUT2PATH} is either not present or of zero-size at $(pwd)\nInput file was ${INPATH}\nFor the first step, this can be input bam file which is either not at ${OUTPATH} or ${OUT2PATH} or empty or with no read file permission.\n#### EXIT_CODE 1 ####\n"

    exit 1
else
    echo -e "\n###### SUCCESS ######\n${TSTAMP}: Output file 1 at ${OUTPATH} and/or file 2 at ${OUT2PATH} was generated under $(pwd)\nInput file was ${INPATH}\n#### EXIT_CODE 0 ####\n"

    if [[ -f ${INPATH} && ${DELFILE} == "DELETE" && ${OUTSIZE} -ge ${MINSIZE} && ${OUT2SIZE} -ge ${MINSIZE} ]]; then
        rm -f "${INPATH}"
        echo -e "## INFO ##\nRemoved input file, ${INPATH}\nDELFILE set to ${DELFILE}\nMINSIZE set to ${MINSIZE} bytes\n"
        
        if [[ -s ${INPATH2} ]];then
            rm -f "${INPATH2}"
            echo -e "## INFO ##\nRemoved input file, ${INPATH2}\n"
        fi

        if [[ -s ${INPATH3} ]];then
            rm -f "${INPATH3}"
            echo -e "## INFO ##\nRemoved input file, ${INPATH3}\n"
        fi
        
        exit 0
    else
        echo -e "## WARN ##\nSkipping deletion of input file, ${INPATH} because ${OUTPATH} or ${OUT2PATH} is less than ${MINSIZE} bytes size or DELFILE set to ${DELFILE}. Make sure that output file is valid."
        
        if [[ "${INPATH}" == "tmp_inpath" ]]; then
                echo "Removing zero-byte ${INPATH} or tmp_inpath"
                rm tmp_inpath
        fi
    fi
    exit 0
fi

## END ##
